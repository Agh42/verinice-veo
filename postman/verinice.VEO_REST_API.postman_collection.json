{
  "info": {
    "_postman_id": "7ed014f4-65a6-4dd2-9d35-acea99c66f25",
    "name": "verinice.VEO REST API",
    "description": "OpenAPI documentation for verinice.VEO.\n\nContact Support:\n Email: verinice@sernet.de",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Basic CRUD operations",
      "item": [
        {
          "name": "Create a unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a170e06-c3cb-4d0f-9a46-ce511d019603",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"unitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "65354a18-0e63-40a5-a5ac-c80067d00d45",
                "exec": [
                  "pm.collectionVariables.set('unitName', 'CRUD test unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Load all units",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "122b9682-8f40-44a0-b762-59686f649ffd",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One unit is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created unit is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('unitId'));",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('unitName'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Units loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n {\n  \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n  \"name\": \"<add example here>\",\n  \"version\": 2,\n  \"validFrom\": \"1990-12-31T23:59:60Z\",\n  \"validUntil\": \"1990-12-31T23:59:60Z\",\n  \"abbreviation\": \"<add example here>\",\n  \"description\": \"<add example here>\",\n  \"riskvalues\": \"<add example here>\",\n  \"objects\": \"<add example here>\",\n  \"units\": \"<add example here>\",\n  \"parent\": {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  \"domains\": [\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   },\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   }\n  ]\n },\n {\n  \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n  \"name\": \"<add example here>\",\n  \"version\": 2,\n  \"validFrom\": \"1990-12-31T23:59:60Z\",\n  \"validUntil\": \"1990-12-31T23:59:60Z\",\n  \"abbreviation\": \"<add example here>\",\n  \"description\": \"<add example here>\",\n  \"riskvalues\": \"<add example here>\",\n  \"objects\": \"<add example here>\",\n  \"units\": \"<add example here>\",\n  \"parent\": {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  \"domains\": [\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   },\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   }\n  ]\n }\n]"
            }
          ]
        },
        {
          "name": "Load the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03fcfbbc-66ef-49ef-853b-76958767bfef",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned unit has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "});",
                  "var eTag = extractTextBetweenQuotes(pm.response.headers.get(\"ETag\"));",
                  "pm.test(\"ETag header is a string\", function () {",
                  "    pm.expect(eTag).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"unitETag\", eTag);",
                  "",
                  "function extractTextBetweenQuotes(str){",
                  "  const matches = str.match(/\"(.*?)\"/);",
                  "  return matches",
                  "    ? matches[1]",
                  "    : str;",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"<add example here>\",\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"<add example here>\",\n \"description\": \"<add example here>\",\n \"riskvalues\": \"<add example here>\",\n \"objects\": \"<add example here>\",\n \"units\": \"<add example here>\",\n \"parent\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"domains\": [\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  }\n ]\n}"
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update the unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3f783789-cd8c-4b3e-a0b2-fc2680ca98e6",
                "exec": [
                  "pm.collectionVariables.set(\"unitName\", \"Unit of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4f82fe71-4237-4bb9-9272-c4b2435d337e",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned unit has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{unitETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{unitId}}\",\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"<add example here>\",\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update the unit concurrently",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d51e90ea-fa47-4d3b-b710-9823aa7542a4",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "254afda2-06e0-4122-8b33-690f92b5fb55",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(412);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{unitETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{unitId}}\",\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"<add example here>\",\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create an asset inside the unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ac98fb97-588d-4f3b-811d-91293c916369",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'CRUD test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "217a026f-2c93-4cc1-9593-6f52cb15b472",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all assets in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41e1b413-f194-4bf0-8249-a770a7c56b3b",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One asset is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created asset is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('assetId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('assetName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "231d82fc-68ff-4af7-b7c0-39ab30d59535",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned asset has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"assetId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"assetName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "",
                  "});",
                  "var eTag = extractTextBetweenQuotes(pm.response.headers.get(\"ETag\"));",
                  "pm.test(\"ETag header is a string\", function () {",
                  "    pm.expect(eTag).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"assetETag\", eTag);",
                  "",
                  "function extractTextBetweenQuotes(str){",
                  "  const matches = str.match(/\"(.*?)\"/);",
                  "  return matches",
                  "    ? matches[1]",
                  "    : str;",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"version\": 2,\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"validUntil\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            },
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Updates the asset",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "352213be-c578-40a9-9f57-68e90753a737",
                "exec": [
                  "pm.collectionVariables.set(\"assetName\", \"Asset of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "23a54ba0-bbaf-4487-afd5-d7bf06768146",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned asset has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"assetId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"assetName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "value": "{{assetETag}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{assetId}}\",\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Asset updated",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update the asset concurrently",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "579d2faa-8680-4f97-ba57-136de5240068",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "483521af-42e6-4c28-afa2-af320666c697",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(412);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{assetETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{assetId}}\",\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{assetId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset updated",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a process that uses the asset",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d24ae60d-ded9-48f2-b928-74edc049d7b0",
                "exec": [
                  "pm.collectionVariables.set(\"processName\", \"Process of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2bcc7334-e4b9-4a2c-ad12-8ef208d6d99e",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"processId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{processName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"assets\": [\n    \t{\n\t        \"displayName\": \"{{assetName}}\",\n\t\t    \"targetUri\": \"/assets/{{assetId}}\"\n    \t}\t\n\t]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all processes in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "91a0ef5f-3534-42a5-91e6-e8f6fc548a8c",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One process is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created process is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('processId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('processName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the process",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4823230e-f95d-45f9-a179-d9d0fcb41c48",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned process has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"processId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"processName\"))",
                  "});",
                  "var eTag = extractTextBetweenQuotes(pm.response.headers.get(\"ETag\"));",
                  "pm.test(\"ETag header is a string\", function () {",
                  "    pm.expect(eTag).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"processETag\", eTag);",
                  "",
                  "function extractTextBetweenQuotes(str){",
                  "  const matches = str.match(/\"(.*?)\"/);",
                  "  return matches",
                  "    ? matches[1]",
                  "    : str;",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update the process",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "271c57a3-56ba-40ab-a4c3-9cab848e6b51",
                "exec": [
                  "pm.collectionVariables.set(\"processName\", \"Process of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "355d3703-a8a7-485a-bf2e-6ed295701304",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned process has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"processId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"processName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{processETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{processId}}\",\n    \"name\": \"{{processName}}\",\n    \"description\": \"{{processName}} description\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"assets\": [\n    \t{\n\t        \"displayName\": \"{{assetName}}\",\n\t\t    \"targetUri\": \"/assets/{{assetId}}\"\n    \t}\t\n\t]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{processId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update the process concurrently",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d9552ab2-0870-4c28-8dc0-4c2d53fae5a9",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c6e777d5-deaa-4936-9ddd-c314df124c68",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(412);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{processETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{processId}}\",\n    \"name\": \"{{processName}}\",\n    \"description\": \"{{processName}} description\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"assets\": [\n    \t{\n\t        \"displayName\": \"{{assetName}}\",\n\t\t    \"targetUri\": \"/assets/{{assetId}}\"\n    \t}\t\n\t]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{processId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a person inside the unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "5120b3b7-516d-4102-b325-50c569153f3d",
                "exec": [
                  "pm.collectionVariables.set('personName', 'CRUD test person');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "269ae983-2433-40b4-9d73-1902cfd34ae6",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('personId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all persons in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "32ca27ea-15ae-4929-b30a-f0de401fdc56",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One person is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created person is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('personId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('personName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the person",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "284aa825-ebdd-4df8-9b67-ab5688b47db9",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned person has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"personId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"personName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "",
                  "});",
                  "var eTag = extractTextBetweenQuotes(pm.response.headers.get(\"ETag\"));",
                  "pm.test(\"ETag header is a string\", function () {",
                  "    pm.expect(eTag).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"personETag\", eTag);",
                  "",
                  "function extractTextBetweenQuotes(str){",
                  "  const matches = str.match(/\"(.*?)\"/);",
                  "  return matches",
                  "    ? matches[1]",
                  "    : str;",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            }
          ]
        },
        {
          "name": "Update the person",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "adaff4fc-9107-4cf8-ab61-eba22e5c8499",
                "exec": [
                  "pm.collectionVariables.set(\"personName\", \"Person with \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a4eb502e-1b30-4ab2-9658-0e6bb3636036",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned person has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"personId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"personName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{personETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{personId}}\",\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{personId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update the person concurrently",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c7b85e7b-bc00-4670-81b0-7bf8456386c4",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "66365c13-4be7-4c2f-bea1-8ea40943e900",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(412);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{personETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{personId}}\",\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{personId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a control inside the unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a520813d-f570-4ddf-8bde-aebe0e4a3b71",
                "exec": [
                  "pm.collectionVariables.set('controlName', 'CRUD test control');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d47d3262-750b-4c6e-a432-c661867b38fb",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('controlId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all controls in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d49a641d-48ab-4369-bcd2-38903705e150",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One control is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created control is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('controlId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('controlName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the control",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9dc843cf-675e-4e13-b720-146cfa63dfb9",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned control has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"controlId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"controlName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "",
                  "});",
                  "var eTag = extractTextBetweenQuotes(pm.response.headers.get(\"ETag\"));",
                  "pm.test(\"ETag header is a string\", function () {",
                  "    pm.expect(eTag).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"controlETag\", eTag);",
                  "",
                  "function extractTextBetweenQuotes(str){",
                  "  const matches = str.match(/\"(.*?)\"/);",
                  "  return matches",
                  "    ? matches[1]",
                  "    : str;",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            }
          ]
        },
        {
          "name": "Update the control",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "43b847a9-741b-4953-8d90-208a0f146dbe",
                "exec": [
                  "pm.collectionVariables.set(\"controlName\", \"Control of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a36dc27a-25f7-4ec9-b212-61812954da90",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned control has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"controlId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"controlName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{controlETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{controlId}}\",\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{controlId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update the control concurrently",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7c98b234-07d3-46ad-8b07-e08955069558",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d33eb009-065a-4fdf-85d6-015b101eb7c1",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(412);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{controlETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{controlId}}\",\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":id"
              ],
              "variable": [
                {
                  "description": "(Required) ",
                  "key": "id",
                  "value": "{{controlId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"name\": \"Lock doors\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"version\": 2,\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"Lock doors\",\n    \"description\": \"Lock doors\",\n    \"domains\": [\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"EU GDPR 2016-05-04\",\n            \"href\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"href\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\",\n    \"customAspects\": \"<object>\",\n    \"links\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the process",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1a887259-cde1-4dd1-a1b0-ecc8db9d812e",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d49c054-d253-496a-bdca-7dc9c456aa64",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the person",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5509c9cd-f6c0-4157-92b8-576d402111d0",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the control",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4dc5dbaf-b634-4c7b-a95e-d7d5e2f63b32",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b6512bd-b71f-464c-abc5-8b8d75b378e9",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a new work  unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bc71de5b-7f82-4f60-967a-193de045421e",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"unitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4c5e08d5-bda6-4ffe-b2ed-f5d0456e6768",
                "exec": [
                  "pm.collectionVariables.set('unitName', 'CRUD test unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Create an asset inside the unit for linking",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "92b5cae7-3e14-4d7f-a01b-13621863f9b0",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'CRUD test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3a4d993-1a13-445d-8625-febfdde50b55",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a process that uses the asset",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e7fabbbb-0560-4393-905c-ab82e8fb193e",
                "exec": [
                  "pm.collectionVariables.set(\"processName\", \"Process of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1376ebbe-8268-4a64-a586-1ee65b8ed68f",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"processId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{processName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the process with properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "412053a8-b56f-43d0-89da-89fe229d9b93",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned process has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"processId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"processName\"))",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a control inside the unit with properties",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "5bd82d95-2986-4ebe-9944-94ec33f26024",
                "exec": [
                  "pm.collectionVariables.set('controlName', 'CRUD test control');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3e8a125e-d1db-407c-ac11-a4d703e90e9c",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('controlId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the control with properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90fb4ae3-2fc8-4ced-aa11-b216f0a41777",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned control has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"controlId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"controlName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            }
          ]
        },
        {
          "name": "Create a person inside the unit with properties",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "87345e00-4a53-41c6-bdd0-29a040943e70",
                "exec": [
                  "pm.collectionVariables.set('personName', 'CRUD test person');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "33d5a0d3-9963-4ba5-ad4c-753ba0d8cfec",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('personId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/persons",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the person with properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "23d74b9b-51f2-45bd-bd19-29b3fcb8aceb",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned person has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"personId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"personName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            },
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create an asset inside the unit with properties",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a68373d3-16b1-4263-99d5-3263fdec2480",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'CRUD test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "77c97f28-ad4b-4fe0-bcaa-ca9e3b408584",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n    ,\"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d2aab02-1a1d-4be1-8ecc-1036f31bc9de",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned asset has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"assetId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"assetName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            }
          ]
        },
        {
          "name": "Create a process VEO-271",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "598c99a7-ecf4-46ca-9f37-6c863509f2b0",
                "exec": [
                  "pm.collectionVariables.set(\"processName\", \"Process of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "38256d00-0517-4675-8315-3ffd742ffa52",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"processIdveo271\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Verarbeitungstätigkeit 1\",\n    \"customAspects\": {\n        \"ProcessDvGroupRechtsgrundlage\": {\n            \"attributes\": {\n                \"processDvRechtsgrundlage\": [\n                    \"processDvRechtsgrundlage1\",\n                    \"processDvRechtsgrundlage5\",\n                    \"processDvRechtsgrundlage2\",\n                    \"processDvRechtsgrundlage3\",\n                    \"processDvRechtsgrundlage4\"\n                ]\n            },\n            \"type\": \"ProcessDvGroupRechtsgrundlage\"\n        }\n    },\n    \"owner\": {\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the process VEO-271",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "45a02e8c-0848-4af9-b8bb-404173540b91",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned process has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"processIdveo271\"));",
                  "    pm.expect(jsonData.name).to.equal(\"Verarbeitungstätigkeit 1\")",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{processIdveo271}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ],
      "description": "Basic CRUD operations",
      "protocolProfileBehavior": {
        
      }
    },
    {
      "name": "Filter functions",
      "item": [
        {
          "name": "Create a unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "242c3206-3a88-42f8-b690-7349f5f7b77a",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"unitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0d5c9d83-8a5b-4da4-88e6-04f73bdb9e90",
                "exec": [
                  "pm.collectionVariables.set('unitName', 'CRUD test unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Create a sub-unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f2c1175-b1b3-485a-84c8-df6989952461",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"subUnitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8dcd9f64-fbaf-4ea0-8a2c-3b6cb23356bb",
                "exec": [
                  "pm.collectionVariables.set('subUnitName', 'CRUD test sub-unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"sub-unit\",\n    \"parent\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Create an asset inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ef81558b-22ae-451a-9796-87873f353616",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'filter test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a0bd2d90-4640-45d5-b524-dc32a678343a",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a process inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "533b17b9-aa75-4dac-8d99-fc13808ce0f0",
                "exec": [
                  "pm.collectionVariables.set('processName', 'filter test process');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "259495c5-cea6-4942-8105-322c601d62f0",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('processId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{processName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a person inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4b956f59-fc09-4665-8b14-f66769a230aa",
                "exec": [
                  "pm.collectionVariables.set('personName', 'filter test person');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f13fc08c-58b5-45bb-9210-3271af517fd5",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('personId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a control inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "627741cb-10e1-407c-a95e-f7b24a7402d2",
                "exec": [
                  "pm.collectionVariables.set('controlName', 'filter test control');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "9a8c6aab-6cd3-487f-9b6f-933bc800213f",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('controlId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f951e741-de18-4bb9-801c-a67c325ab55a",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned unit has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"<add example here>\",\n \"version\": 2,\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"validUntil\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"<add example here>\",\n \"description\": \"<add example here>\",\n \"riskvalues\": \"<add example here>\",\n \"objects\": \"<add example here>\",\n \"units\": \"<add example here>\",\n \"parent\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"domains\": [\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "Load all assets in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "936c0105-2fa2-47dc-9b2e-d084f398957c",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One asset is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created asset is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('assetId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('assetName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all processes in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8bf4b537-3b94-4a5a-ab44-ff8649a56462",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One process is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created process is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('processId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('processName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all persons in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "660b2bcc-e041-4a02-8ecb-d9597bbeec20",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One person is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created person is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('personId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('personName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all controls in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b530336-584f-40f9-a59b-73fee60be231",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One control is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created control is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('controlId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('controlName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all assets in the sub-unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d69ea0c-c5b6-4904-a6e3-5414f1c06ff3",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One asset is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created asset is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('assetId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('assetName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit={{subUnitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{subUnitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Loading assets with invalid unit fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3a67f628-8969-402b-9ca1-bbf82b840593",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit=12aae97e-e0b1-4900-a961-96a19b972f72",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "12aae97e-e0b1-4900-a961-96a19b972f72"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "312ee8b6-5170-4bcf-a91f-c642428e209d",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the process",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f20a3281-2bc0-4b5f-b5e7-79629ae54cd2",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the person",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b1c65ed1-05e1-433f-a099-e9cab0f6ffc3",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the control",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a550cb7-6aa3-4d1e-8db2-f422462d6416",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the sub-unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ddaa9e08-fa2c-4d4a-a3b8-0a7004745e70",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{subUnitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0fdb8091-0513-485f-9d35-be03291dfabd",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ],
      "protocolProfileBehavior": {
        
      }
    },
    {
      "name": "Search functions",
      "item": [
        {
          "name": "http://localhost:8070/units/searches",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3a550518-97a1-4d17-bdbc-d2d516a6fce1",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.searchUrl;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"searchId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"unitId\": \"{{unitId}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8070/assets/searches",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8070",
              "path": [
                "assets",
                "searches"
              ]
            }
          },
          "response": []
        },
        {
          "name": "http://localhost:8070/assets/searches/q1YqzcssCS3NTFGyUjJLM7S0NDUy101LMzTUNUkxMNS1MLFM1U1OMzSwTElNTTG2TFbSUUovyi8tCKksSFWyyivNyakFAA==",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8070{{searchId}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8070{{searchId}}"
            }
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {
        
      }
    }
  ],
  "auth": {
    "type": "oauth2",
    "oauth2": [
      {
        "key": "accessToken",
        "value": "{{accessToken}}",
        "type": "string"
      },
      {
        "key": "tokenType",
        "value": "bearer",
        "type": "string"
      },
      {
        "key": "addTokenTo",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "3c1cedf3-a1f3-47b1-bcb6-119a2823548f",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "66233c63-1c76-4e8b-abbd-1704adf488e9",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "f3d5347a-7df1-44ee-ad87-d85d4adead5c",
      "key": "baseUrl",
      "value": "http://localhost:8070"
    },
    {
      "id": "67ed1620-a108-4135-a3b4-610b359e72bc",
      "key": "unitId",
      "value": ""
    },
    {
      "id": "558f03f9-0cc6-4a8f-a5c1-c79b7f6c0106",
      "key": "processId",
      "value": ""
    },
    {
      "id": "e5f70aee-c001-4e12-914a-b317e5b5d7d9",
      "key": "processName",
      "value": ""
    },
    {
      "id": "e516ca8b-885b-4d56-9476-bb81ab337931",
      "key": "unitName",
      "value": ""
    },
    {
      "id": "5167f7e8-b132-41f2-b9fd-30638365dfb6",
      "key": "accessToken",
      "value": ""
    },
    {
      "id": "2a8524c8-7e7a-43ca-acb8-387226c75ca9",
      "key": "assetId",
      "value": ""
    },
    {
      "id": "f46f497b-4c3c-48e4-bc22-ad4af1ef242c",
      "key": "assetName",
      "value": ""
    },
    {
      "id": "2c33d296-5238-4ef0-806e-1296215bb95c",
      "key": "personId",
      "value": ""
    },
    {
      "id": "3996b8ae-ba0d-43fd-8c9b-2a97bd686e8d",
      "key": "personName",
      "value": ""
    },
    {
      "id": "46b1a4d2-637f-4b79-a82b-29db317980ce",
      "key": "controlId",
      "value": ""
    },
    {
      "id": "81bbc592-d3b8-4070-afca-61e08d62bfc1",
      "key": "controlName",
      "value": ""
    },
    {
      "id": "162b460e-d6a5-4e8b-98b7-59f2112eb051",
      "key": "processIdveo271",
      "value": ""
    },
    {
      "id": "cd679d66-8ad5-4b0e-9991-a7b81753be3d",
      "key": "subUnitName",
      "value": ""
    },
    {
      "id": "cfbe3027-a1a7-49db-8588-21544faa3e14",
      "key": "subUnitId",
      "value": ""
    },
    {
      "id": "65fb0f1a-1e0e-4a19-a615-3d84c8d49dd6",
      "key": "searchId",
      "value": ""
    },
    {
      "id": "08d33309-54db-46b9-8934-70c3dc98c8df",
      "key": "unitETag",
      "value": ""
    },
    {
      "id": "31571550-14ce-4acd-bc63-dcde809380ad",
      "key": "assetETag",
      "value": ""
    },
    {
      "id": "27d9912a-2ee0-4804-9bb2-f9c3e9fd7a6a",
      "key": "processETag",
      "value": ""
    },
    {
      "id": "39b825ac-0c94-4c31-87bd-272eaae3812d",
      "key": "personETag",
      "value": ""
    },
    {
      "id": "de51f907-027a-49f9-a583-3cda090f0daf",
      "key": "controlETag",
      "value": ""
    }
  ],
  "protocolProfileBehavior": {
    
  }
}
