{
  "info": {
    "_postman_id": "efe690e0-4fcc-4148-9a30-7fb21dadcdf0",
    "name": "verinice.VEO REST API",
    "description": "OpenAPI documentation for verinice.VEO.\n\nContact Support:\n Email: verinice@sernet.de",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Basic CRUD operations",
      "item": [
        {
          "name": "Create a unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "30466623-88f1-412c-b365-c1c551bc7d64",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"unitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4c33ee0a-6092-41fb-ba2f-45e1f31550ee",
                "exec": [
                  "pm.collectionVariables.set('unitName', 'CRUD test unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Load the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7cd86330-1dd0-456c-a548-42f2f57b961c",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned unit has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"<add example here>\",\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"<add example here>\",\n \"description\": \"<add example here>\",\n \"riskvalues\": \"<add example here>\",\n \"objects\": \"<add example here>\",\n \"units\": \"<add example here>\",\n \"parent\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"domains\": [\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  }\n ]\n}"
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all units",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d5cdc95-1466-4f6c-bd09-4a46c146a539",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One unit is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created unit is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('unitId'));",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('unitName'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Units loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n {\n  \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n  \"name\": \"<add example here>\",\n  \"version\": 2,\n  \"validFrom\": \"1990-12-31T23:59:60Z\",\n  \"validUntil\": \"1990-12-31T23:59:60Z\",\n  \"abbreviation\": \"<add example here>\",\n  \"description\": \"<add example here>\",\n  \"riskvalues\": \"<add example here>\",\n  \"objects\": \"<add example here>\",\n  \"units\": \"<add example here>\",\n  \"parent\": {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  \"domains\": [\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   },\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   }\n  ]\n },\n {\n  \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n  \"name\": \"<add example here>\",\n  \"version\": 2,\n  \"validFrom\": \"1990-12-31T23:59:60Z\",\n  \"validUntil\": \"1990-12-31T23:59:60Z\",\n  \"abbreviation\": \"<add example here>\",\n  \"description\": \"<add example here>\",\n  \"riskvalues\": \"<add example here>\",\n  \"objects\": \"<add example here>\",\n  \"units\": \"<add example here>\",\n  \"parent\": {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  \"domains\": [\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   },\n   {\n    \"displayName\": \"My Unit\",\n    \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n   }\n  ]\n }\n]"
            }
          ]
        },
        {
          "name": "Create an asset inside the unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "575e3c9b-21d6-42ef-bbeb-2db6db3a5fb8",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'CRUD test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "9cc57228-faf9-402e-b472-0815c447cd9a",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3917088f-dd5f-411d-b459-6b848426a3f4",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned asset has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"assetId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"assetName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"version\": 2,\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"validUntil\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            },
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all assets in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "42899245-9c65-430c-b617-a97fb8d75c22",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One asset is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created asset is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('assetId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('assetName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a process that uses the asset",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7c101a3d-9e96-4f07-bdc9-7050b1f09ec1",
                "exec": [
                  "pm.collectionVariables.set(\"processName\", \"Process of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7052f7d0-f12e-42ea-8063-63a6fa245a18",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"processId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{processName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"assets\": [\n    \t{\n\t        \"displayName\": \"{{assetName}}\",\n\t\t    \"targetUri\": \"/assets/{{assetId}}\"\n    \t}\t\n\t]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the process",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cacf14f0-e9ff-4396-9348-650aac8b1b64",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned process has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"processId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"processName\"))",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all processes in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "91751ea4-9edc-4bfa-a101-098305b85f54",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One process is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created process is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('processId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('processName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a person inside the unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0da17238-8cea-4a27-bf6f-92912060a0e3",
                "exec": [
                  "pm.collectionVariables.set('personName', 'CRUD test person');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "0da8db7e-0c83-4a64-9433-64fb4c97e88f",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('personId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all persons in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "10df2f47-5413-4d27-bd17-759cbf2d0c02",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One person is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created person is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('personId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('personName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the person",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "de3dbd0b-ca6c-4912-8a98-d1b32dc3fba4",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned person has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"personId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"personName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            },
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a control inside the unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ca70a8b8-89fa-4b46-b709-f3bce700e54b",
                "exec": [
                  "pm.collectionVariables.set('controlName', 'CRUD test control');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "36ed0df2-918b-4864-906c-a80c03882669",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('controlId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all controls in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "abaf77fb-10af-47be-add6-486bc3b64e65",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One control is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created control is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('controlId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('controlName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the control",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bb6d56c0-8a74-41cf-acfb-23a9b309e6ba",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned control has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"controlId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"controlName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            }
          ]
        },
        {
          "name": "Delete the process",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2907fc3-a40b-43bc-957d-ed2285b81b0b",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f88b1c5-3fa6-4875-bbc1-0f950096f472",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the person",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "202fbff5-10b6-42e5-bf2f-517f04410c19",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the control",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0953982-49e2-4565-bc6f-2922cea8e7af",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5175dd2c-0494-498b-9b29-be258dd9895e",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a new work  unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e39215a8-7620-4ed6-8ad7-92e471cc6fb6",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"unitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "91e66de1-c84a-4a83-baf5-49c14be2e77a",
                "exec": [
                  "pm.collectionVariables.set('unitName', 'CRUD test unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Create an asset inside the unit for linking",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "db2bcb72-405e-471c-add4-a87680d2c171",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'CRUD test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "039b9bcf-a948-4a11-90e0-586fa8ee4776",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a process that uses the asset",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "5855f923-934d-4285-a778-19cf852db1eb",
                "exec": [
                  "pm.collectionVariables.set(\"processName\", \"Process of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3a2586ec-aca0-4992-924e-976120238533",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"processId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{processName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the process with properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c0f3675-872c-45fa-962d-136a1268f819",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned process has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"processId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"processName\"))",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a control inside the unit with properties",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c24d7471-635d-4131-8c64-478c367ebc23",
                "exec": [
                  "pm.collectionVariables.set('controlName', 'CRUD test control');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7bf960a7-5103-469d-bf5f-cc48dc135b62",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('controlId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\n    \"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the control with properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "923f74e8-eab1-41c2-bbdd-6ed95bb76302",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned control has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"controlId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"controlName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            }
          ]
        },
        {
          "name": "Create a person inside the unit with properties",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c8c906c0-8042-4cd4-969c-45f9464fb9d1",
                "exec": [
                  "pm.collectionVariables.set('personName', 'CRUD test person');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "842b1d14-a092-4feb-8fd7-629f159cf326",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('personId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    },\"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/persons",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the person with properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "75abbda7-3eb1-4a95-92de-aadc397eda93",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned person has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"personId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"personName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            },
            {
              "name": "Asset not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create an asset inside the unit with properties",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ddedb131-9d5f-4dc4-a6c6-613df97b18e6",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'CRUD test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f3085a7e-3a89-4ffa-ab46-7b7ca9978aee",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n    ,\"links\": {\n        \"a1\": [\n            {\n                \"type\": \"A1\",\n                \"name\": \"requires\",\n                \"target\": {\n                    \"targetUri\": \"/assets/{{assetId}}\"\n                }\n            }\n        ]\n    },\n    \"customAspects\": {\n        \"myaspecttest1\": {\n            \"type\": \"myaspecttest1\",\n            \"applicableTo\": [\n                \"Control\"\n            ],\n            \"domains\": [],\n            \"attributes\": {\n                \"test1\": \"value1\",\n                \"test2\": \"value2\"\n            }\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab1d0ca4-f1d4-4dc9-9d2b-d228a0c25c89",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned asset has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"assetId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"assetName\"))",
                  "    pm.expect(jsonData.owner.displayName).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "    pm.expect(jsonData.owner.targetUri).to.equal(pm.collectionVariables.get(\"baseUrl\")+'/units/'+pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.customAspects.myaspecttest1.type).to.equal('myaspecttest1');",
                  "    pm.expect(jsonData.links.A1[0].type).to.equal('A1');",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Asset loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"Lock doors\",\n \"owner\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"Lock doors\",\n \"description\": \"Lock doors\",\n \"domains\": [\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"EU GDPR 2016-05-04\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/domain/<00000000-0000-0000-0000-000000000000>\"\n  }\n ],\n \"riskvalues\": \"<add example here>\",\n \"customAspects\": \"<object>\",\n \"links\": \"<object>\"\n}"
            }
          ]
        },
        {
          "name": "Create a process VEO-271",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "48d849e1-347f-4410-a016-62f00cb53578",
                "exec": [
                  "pm.collectionVariables.set(\"processName\", \"Process of \" + pm.variables.replaceIn('{{$randomFirstName}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c5592463-deff-420e-b41c-3aa3e4ea754d",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"processIdveo271\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Verarbeitungstätigkeit 1\",\n    \"customAspects\": {\n        \"ProcessDvGroupRechtsgrundlage\": {\n            \"attributes\": {\n                \"processDvRechtsgrundlage\": [\n                    \"processDvRechtsgrundlage1\",\n                    \"processDvRechtsgrundlage5\",\n                    \"processDvRechtsgrundlage2\",\n                    \"processDvRechtsgrundlage3\",\n                    \"processDvRechtsgrundlage4\"\n                ]\n            },\n            \"type\": \"ProcessDvGroupRechtsgrundlage\"\n        }\n    },\n    \"owner\": {\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\",\n    \"assets\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"extinguishingTime\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/processes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the process VEO-271",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c784218a-e694-4df2-82de-9b09b7d69253",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned process has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"processIdveo271\"));",
                  "    pm.expect(jsonData.name).to.equal(\"Verarbeitungstätigkeit 1\")",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{processIdveo271}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/processes/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "processes",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ],
      "description": "Basic CRUD operations",
      "protocolProfileBehavior": {
        
      }
    },
    {
      "name": "Filter functions",
      "item": [
        {
          "name": "Create a unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e429047e-e879-48c9-a2e3-39702da82cda",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"unitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0d60ba77-82ed-4b4f-a741-9c0a2315967a",
                "exec": [
                  "pm.collectionVariables.set('unitName', 'CRUD test unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{unitName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Create a sub-unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c87ef6d-5395-4682-9a15-a1ab43646a16",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"subUnitId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1b9b3c5c-6a7b-4493-b6eb-5a2ebcbdaf1d",
                "exec": [
                  "pm.collectionVariables.set('subUnitName', 'CRUD test sub-unit');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"sub-unit\",\n    \"parent\": {\n        \"displayName\": \"{{unitName}}\",\n        \"targetUri\": \"/units/{{unitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/units",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units"
              ]
            }
          },
          "response": [
            {
              "name": "Unit created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My unit\",\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"U-96\",\n    \"description\": \"This is currently the main and only unit for our organization.\",\n    \"riskvalues\": \"<add example here>\",\n    \"objects\": \"<add example here>\",\n    \"units\": \"<add example here>\",\n    \"parent\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/units",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<object>\""
            }
          ]
        },
        {
          "name": "Create an asset inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b89b50af-8613-4eec-92d4-befb2c6ee2f2",
                "exec": [
                  "pm.collectionVariables.set('assetName', 'filter test asset');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b29560d1-08fe-415a-b70c-abb4bc81ecfe",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('assetId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{assetName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/assets",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a process inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0817e59d-9844-4af3-92bd-7f736477619d",
                "exec": [
                  "pm.collectionVariables.set('processName', 'filter test process');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "11adb8c2-76ea-4966-bef2-e31069d07ec0",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('processId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{processName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/processes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a person inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "44182403-3129-4eb7-8ce3-9105c88f8236",
                "exec": [
                  "pm.collectionVariables.set('personName', 'filter test person');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6cbda63d-c796-42d3-b0ac-f48509f2e2a6",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('personId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{personName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Create a control inside the sub-unit",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "536407c8-8079-4513-bbec-947bd405f85f",
                "exec": [
                  "pm.collectionVariables.set('controlName', 'filter test control');"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "78f457fa-189d-4a66-af66-bd2c980afc40",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.resourceId;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set('controlId', resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{controlName}}\",\n    \"owner\": {\n        \"displayName\": \"{{subUnitName}}\",\n        \"targetUri\": \"/units/{{subUnitId}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/controls",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ]
            }
          },
          "response": [
            {
              "name": "Asset created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<add example here>\",\n    \"owner\": {\n        \"displayName\": \"My Unit\",\n        \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n    },\n    \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n    \"validFrom\": \"1990-12-31T23:59:60Z\",\n    \"validUntil\": \"1990-12-31T23:59:60Z\",\n    \"abbreviation\": \"<add example here>\",\n    \"description\": \"<add example here>\",\n    \"domains\": [\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        },\n        {\n            \"displayName\": \"My Unit\",\n            \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n        }\n    ],\n    \"links\": \"<add example here>\",\n    \"customAspects\": \"<add example here>\",\n    \"riskvalues\": \"<add example here>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/assets",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "345d3180-24e8-4d2e-990d-97160edca69c",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Returned unit has the correct values\", function () {",
                  "    pm.expect(jsonData.id).to.equal(pm.collectionVariables.get(\"unitId\"));",
                  "    pm.expect(jsonData.name).to.equal(pm.collectionVariables.get(\"unitName\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit loaded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": \"adf037f1-0089-48ad-9177-92269918758b\",\n \"name\": \"<add example here>\",\n \"version\": 2,\n \"validFrom\": \"1990-12-31T23:59:60Z\",\n \"validUntil\": \"1990-12-31T23:59:60Z\",\n \"abbreviation\": \"<add example here>\",\n \"description\": \"<add example here>\",\n \"riskvalues\": \"<add example here>\",\n \"objects\": \"<add example here>\",\n \"units\": \"<add example here>\",\n \"parent\": {\n  \"displayName\": \"My Unit\",\n  \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n },\n \"domains\": [\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  },\n  {\n   \"displayName\": \"My Unit\",\n   \"targetUri\": \"http://<api.example.org>/api/v1/unit/<00000000-0000-0000-0000-000000000000>\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "Load all assets in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "66871e9d-3c9a-40a4-a5d2-6a9affe7ef61",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One asset is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created asset is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('assetId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('assetName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all processes in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec3e75aa-f9ce-4519-bc0d-95bdb9ff61f9",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One process is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created process is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('processId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('processName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all persons in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "228dc588-e136-4da4-97f0-b5c4fdefa95b",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One person is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created person is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('personId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('personName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all controls in the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1614ea0c-b319-4dd9-af28-7e19da5e98fa",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One control is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created control is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('controlId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('controlName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls?unit={{unitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{unitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Load all assets in the sub-unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ffcfbfb0-a7a6-4d6c-b21f-f93c464efc25",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"One asset is available\", function () {",
                  "    pm.expect(jsonData).to.have.lengthOf(1);",
                  "});",
                  "pm.test(\"The created asset is returned\", function () {",
                  "    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get('assetId'))",
                  "    pm.expect(jsonData[0].name).to.equal(pm.collectionVariables.get('assetName'))",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit={{subUnitId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "{{subUnitId}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Loading assets with invalid unit fails",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a463bf72-84ba-4d48-bcc6-8dfb5a5ae891",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets?unit=12aae97e-e0b1-4900-a961-96a19b972f72",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets"
              ],
              "query": [
                {
                  "key": "unit",
                  "value": "12aae97e-e0b1-4900-a961-96a19b972f72"
                }
              ]
            }
          },
          "response": [
            {
              "name": "default response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/assets?parent=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "assets"
                  ],
                  "query": [
                    {
                      "key": "parent",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the asset",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6eb75fef-c0e3-42a9-ac27-bb8682fc3a27",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/assets/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "assets",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{assetId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the process",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc00b98e-8d8f-44bb-a145-810d8deeca9b",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/processes/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "processes",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{processId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the person",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eea5dfa3-0f0c-4f8c-8a20-84aa34c947fb",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "persons",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{personId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the control",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb5602bb-fe83-4ec7-8bb3-8e540b82dff2",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/controls/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "controls",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{controlId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the sub-unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e6f5cb37-e0f9-4c6d-8123-5892fa80c887",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{subUnitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete the unit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "23a9ef34-e332-44e7-a62e-c1aa71cde421",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/units/:uuid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "units",
                ":uuid"
              ],
              "variable": [
                {
                  "key": "uuid",
                  "value": "{{unitId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Unit deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Unit not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/units/:uuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "units",
                    ":uuid"
                  ],
                  "variable": [
                    {
                      "key": "uuid"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ],
      "protocolProfileBehavior": {
        
      }
    },
    {
      "name": "Search functions",
      "item": [
        {
          "name": "http://localhost:8070/units/searches",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f07913e2-eb80-4fae-9e1b-d9d13837e6da",
                "exec": [
                  "pm.test(\"Validate status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "var resourceId = jsonData.searchUrl;",
                  "pm.test(\"Resource ID is a string\", function () {",
                  "    pm.expect(resourceId).to.be.a('string')",
                  "});",
                  "pm.collectionVariables.set(\"searchId\", resourceId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"unitId\": \"{{unitId}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8070/assets/searches",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8070",
              "path": [
                "assets",
                "searches"
              ]
            }
          },
          "response": []
        },
        {
          "name": "http://localhost:8070/assets/searches/q1YqzcssCS3NTFGyUjJLM7S0NDUy101LMzTUNUkxMNS1MLFM1U1OMzSwTElNTTG2TFbSUUovyi8tCKksSFWyyivNyakFAA==",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8070{{searchId}}",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8070{{searchId}}"
            }
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {
        
      }
    }
  ],
  "auth": {
    "type": "oauth2",
    "oauth2": [
      {
        "key": "accessToken",
        "value": "{{accessToken}}",
        "type": "string"
      },
      {
        "key": "tokenType",
        "value": "bearer",
        "type": "string"
      },
      {
        "key": "addTokenTo",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "603fecd8-2c97-4c7e-a5ce-2216abcbd7d6",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "bf778038-0989-499b-9b75-2f8ac1d6ee26",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "76b7ffb8-f2d5-49c5-a123-0bd6666ad349",
      "key": "baseUrl",
      "value": "http://localhost:8070"
    },
    {
      "id": "9fe74e4b-f97e-4e06-8f6b-3cfadcdf3829",
      "key": "unitId",
      "value": ""
    },
    {
      "id": "e5e54c10-5867-453e-9a12-73f08734a64b",
      "key": "processId",
      "value": ""
    },
    {
      "id": "c912ebef-5b3c-4bcf-85d5-cbb5c6b8a825",
      "key": "processName",
      "value": ""
    },
    {
      "id": "f3b587bd-f198-46e3-84d3-5470297e5080",
      "key": "unitName",
      "value": ""
    },
    {
      "id": "64f66872-9b06-4780-9734-f15501b82261",
      "key": "accessToken",
      "value": ""
    },
    {
      "id": "e22fc8e2-42cc-4ca7-97bc-e008c62cae76",
      "key": "assetId",
      "value": ""
    },
    {
      "id": "1ef6b8f7-ef6f-417c-8561-862d8e180d2d",
      "key": "assetName",
      "value": ""
    },
    {
      "id": "467c63e9-1088-4258-a631-2a37ba17dc3a",
      "key": "personId",
      "value": ""
    },
    {
      "id": "2902b51d-922a-41c8-a672-1fa40b1c8f7a",
      "key": "personName",
      "value": ""
    },
    {
      "id": "f565d8e6-3a35-41bb-a297-3a83057a2349",
      "key": "controlId",
      "value": ""
    },
    {
      "id": "14f792c3-1b6e-4e52-b757-c2d74c2f843d",
      "key": "controlName",
      "value": ""
    },
    {
      "id": "ef56c5c6-75a6-4ab4-8ed5-e60a24367c97",
      "key": "processIdveo271",
      "value": ""
    },
    {
      "id": "d419510e-2147-4839-aae4-0ce61ca2438d",
      "key": "subUnitName",
      "value": ""
    },
    {
      "id": "5b755b60-6901-463e-852d-f3c4cd912047",
      "key": "subUnitId",
      "value": ""
    },
    {
      "id": "d2104548-de54-4314-b555-1317d65e516a",
      "key": "searchId",
      "value": ""
    }
  ],
  "protocolProfileBehavior": {
    
  }
}
