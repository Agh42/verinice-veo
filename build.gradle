buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
    }
}
allprojects  {
    group = 'org.v2020'
    version = '0.1.0-SNAPSHOT'
}


subprojects {
    
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: 'jacoco'
      
    dependencyManagement {
        dependencies {
             dependency 'org.slf4j:slf4j-api:1.7.25'
             dependency 'com.google.guava:guava:22.0'
             dependency 'commons-io:commons-io:2.5'
             dependency 'org.joinfaces:jsf-spring-boot-starter:2.4.0'
             dependency 'org.springframework:spring-web:4.3.9.RELEASE'
             dependency 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
             dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8'
             dependency 'postgresql:postgresql:9.4.1208-jdbc42-atlassian-hosted'
             dependency 'commons-lang:commons-lang:2.6'
             dependency 'net._01001111:jlorem:1.3'
             dependency 'commons-cli:commons-cli:1.4'
             dependency 'javax:javaee-api:7.0'
             dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8'
             dependency 'ch.qos.logback:logback-classic:1.1.11'
        }
    }
      
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
      
    tasks.withType(JavaCompile) {
      	options.encoding = 'UTF-8'
    }
    
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    pmd.ignoreFailures = true
    findbugs.ignoreFailures = true

    findbugsTest.enabled = false
    pmdTest.enabled = false
  
    // Update the test result file timestamps so Jenkins picks them up even when doing incremental builds
    if (rootProject.hasProperty('ci')){
	    task jenkinsTestFix {
	        inputs.files test.outputs.files
	        doLast {
	            if (!sourceSets.test.allSource.empty){
	                def timestamp = System.currentTimeMillis()
	                test.reports.junitXml.destination.eachFile {
	                    it.lastModified = timestamp
	                }
	            }
	        }
	    }
	    build.dependsOn(jenkinsTestFix)
    }

    dependencies {
        compile 'org.slf4j:slf4j-api'
        runtime 'ch.qos.logback:logback-classic'
    }
}