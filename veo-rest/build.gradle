import java.util.concurrent.Callable
import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors

plugins {
    id "com.gorylenko.gradle-git-properties" version "2.3.1"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'

dependencies {
    implementation project(":veo-adapter")
    implementation project(":veo-persistence")
    implementation project(":veo-message")

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'io.jsonwebtoken:jjwt-api'
    implementation 'org.springdoc:springdoc-openapi-ui'
    implementation 'io.swagger.core.v3:swagger-core'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    testImplementation "org.testcontainers:testcontainers"
    testImplementation "org.testcontainers:spock"
    testImplementation 'com.h2database:h2'

    testImplementation 'org.spockframework:spock-spring'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.networknt:json-schema-validator'
    testImplementation 'commons-codec:commons-codec'
    testImplementation project(":veo-test")
    testImplementation 'org.codehaus.groovy:groovy-json'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    testRuntimeOnly 'org.testcontainers:postgresql'
}

jar {
    enabled = false
}

bootRun {
    def activeSpringProfiles = 'psql'
    findProperty('springProfiles')?.with { activeSpringProfiles = it }
    System.properties.'spring.profiles.active'?.with { activeSpringProfiles = it }
    systemProperty 'spring.profiles.active', activeSpringProfiles
    systemProperty 'veo.etag.salt', "zu#4Q8JKdy"
    if ( project.hasProperty('jvmArgs') ) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
    }
}

// create build-info.properties with build information
springBoot {
    buildInfo {
        properties {
            // add additional CI information when building in Jenkins
            if (rootProject.hasProperty('ciBuildNumer')) {
                additional = [
                    'ci.buildnumber': rootProject.getProperty('ciBuildNumer'),
                    'ci.jobname': rootProject.getProperty('ciJobName')
                ]
            }
        }
    }
}