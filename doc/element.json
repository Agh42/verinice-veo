{
  "all": {
    "get": {
      "description": "Returns the list of all readable elements",
      "summary": "Retreive all elements",
      "responses": {
        "200": {
          "description": "List elements",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "components.json#schemas/element"
                }
              }
            }
          }
        },
        "403": {
          "$ref": "unauthorized_response.json"
        }
      }
    },
    "post": {
      "summary": "Add a new element to the collection",
      "description": "Add a new element to the collection.\n\nThe schema and the parent, if present, shall be passed as JSON reference. Arbitraty properies may be added, depending on the schema.",
      "requestBody": {
        "description": "element to create",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "components.json#schemas/element"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "The element has been created",
          "headers": {
            "Location": {
              "description": "The URI to access the new resource",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "403": {
          "$ref": "unauthorized_response.json"
        }
      }
    }
  },
  "self": {
    "parameters": [
      {
        "name": "uuid",
        "in": "path",
        "required": true,
        "description": "The UUID of the elements to process"
      }
    ],
    "get": {
      "summary": "Retreive the element with given UUID",
      "description": "Retreive the element with given UUID",
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "components.json#schemas/element"
              }
            }
          }
        },
        "403": {
          "$ref": "unauthorized_response.json"
        }
      }
    },
    "put": {
      "summary": "Update the element with given UUID",
      "description": "The element will be totally overwritten. See POST /elements for further details.",
      "requestBody": {
        "description": "The updated content",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "components.json#schemas/element"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "The element has been updated"
        },
        "403": {
          "$ref": "unauthorized_response.json"
        }
      }
    }
  },
  "children": {
    "parameters": [
      {
        "name": "uuid",
        "in": "path",
        "description": "The UUID of the elements to process"
      }
    ],
    "get": {
      "summary": "Retreive a list of all elements with given parent's id.",
      "description": "Retreive a list of all elements with given parent's id.",
      "responses": {
        "200": {
          "description": "Children",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "components.json#schemas/element"
                }
              }
            }
          }
        },
        "403": {
          "$ref": "unauthorized_response.json"
        }
      }
    }
  },
  "links": {
    "parameters": [
      {
        "name": "uuid",
        "in": "path",
        "description": "The UUID of the elements to process"
      }
    ],
    "get": {
      "summary": "Retrive links where the element is a part of",
      "description": "Retrive links where the element is a part of, as target or source",
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "components.json#schemas/link"
                }
              }
            }
          }
        },
        "403": {
          "$ref": "unauthorized_response.json"
        }
      }
    }
  }
}
